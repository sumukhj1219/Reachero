generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     String  @id @default(uuid())
  email  String  @unique
  resumes Resume[]
}

model Resume {
  id             String            @id @default(uuid())
  title          String?
  firstName      String?
  lastName       String?
  email          String?           @unique
  phone          String?
  city           String?
  state          String?
  country        String?
  pincode        String?
  jobTitle       String?
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt

  userId         String
  user           User              @relation(fields: [userId], references: [id])

  workExperiences WorkExperience[]
  educations       Education[]
  projects         Project[]
  skills           Skill[]
  achievements     Achievement[]
}

model WorkExperience {
  id          String   @id @default(uuid())
  company     String
  position    String
  startDate   DateTime?
  endDate     DateTime?
  description String

  resumeId    String
  resume      Resume   @relation(fields: [resumeId], references: [id])
}

model Education {
  id         String   @id @default(uuid())
  degree     String
  school     String
  startDate  DateTime?
  endDate    DateTime?
  cgpa       String

  resumeId   String
  resume     Resume   @relation(fields: [resumeId], references: [id])
}

model Project {
  id          String   @id @default(uuid())
  projectName String
  description String

  resumeId    String
  resume      Resume   @relation(fields: [resumeId], references: [id])
}

model Skill {
  id        String   @id @default(uuid())
  skill     String
  category  String

  resumeId  String
  resume    Resume   @relation(fields: [resumeId], references: [id])
}

model Achievement {
  id          String   @id @default(uuid())
  title       String
  description String

  resumeId    String
  resume      Resume   @relation(fields: [resumeId], references: [id])
}
